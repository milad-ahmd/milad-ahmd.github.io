{"version":3,"sources":["components/FoodItem/FoodItem.js","components/FoodList.js","components/TopSlider/TopSlider.js","components/Header/Header.js","pages/MainPage.js","App.js","serviceWorker.js","index.js","asset/img/topSlider1.jpg","asset/img/logo.jpg"],"names":["FoodItem","props","food","data","className","src","image","mealType","title","menuType","cuisineType","courseType","type","price","FoodList","Grid","container","item","xs","direction","spacing","Fragment","map","index","key","TopSlider","topSlider1","Header","logo","require","ElevationScroll","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","MainPage","CssBaseline","AppBar","Toolbar","Box","my","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7c68bd51.chunk.js","sourcesContent":["import React from 'react';\nimport './FoodItem.scss'\nimport { Icon } from 'antd';\nexport default function FoodItem(props) {\n    const food=props.data;\n    return (\n        <div>\n            <div className='image'>\n                <img src={food.image} />\n                <span className=\"label\">{food.mealType.title}</span>\n            </div>\n\n            <div className='more-details'>\n                <div className=\"title\">{food.title}</div>\n                <div className=\"sub-title\">\n                    <a className=\"main\">{food.menuType.title}. </a>\n                    <a className=\"sub\">{food.cuisineType.title}. </a>\n                    <a className=\"sub\">{food.courseType.title}</a>\n                </div>\n            </div>\n\n            <div className=\"extra\">\n                <span>\n                    <span className=\"tag light\">\n                        <Icon type=\"clock-circle\" />\n                        4-6 Mins</span>\n                    <span className=\"tag dark\">${food.price}</span>\n                </span>\n                <span className=\"tag green light\">Free Pickup</span>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './FoodList.scss'\nimport Grid from '@material-ui/core/Grid';\nimport FoodItem from './FoodItem/FoodItem'\n\n\nfunction FoodList(props) {\n    return (\n\n        <Grid container>\n            <Grid item xs={1}>\n            </Grid>\n            <Grid item xs={10}>\n                <div className=\"each-product-header\">\n                    <div className=\"title\">{props.title}</div>\n                </div>\n                <div className=\"horizontal-list-container scroll-bar\">\n                    <div className=\"bar\">\n                        <div className=\"cursor\"></div>\n                    </div>\n                </div>\n                <Grid container direction={'row'} spacing={3}>\n                    <React.Fragment>\n                        {props.data.map((item, index) => {\n                            return (\n                                <Grid item xs={4}>\n                                    <FoodItem key={index} data={item} />\n                                </Grid>\n                            )\n                        })}\n                    </React.Fragment>\n                </Grid>\n            </Grid>\n            <Grid item xs={1}>\n            </Grid>\n        </Grid>\n\n    )\n}\nexport default FoodList;\n","import React from 'react';\nimport './TopSlider.scss'\nimport topSlider1 from '../../asset/img/topSlider1.jpg';\n\n\nexport default function TopSlider(props){\n    return(\n        <div className={'top-slider'}>\n                <div className=\"bg-image\">\n                    <img src={topSlider1}/>\n                </div>\n                <div className='slider-details'>\n                    <h1 className='title'>Breakfast Special</h1>\n                    <p className='sub'>\n                        Enjoy $10 Off When you order two or more of Blueberry Pancake Breakfast\n                    </p>\n\n                    <button className='more-btn'>\n                        use <span>Breakfast Special</span>\n                    </button>\n                </div>\n            </div>\n\n    )\n}","import React from 'react';\nimport './Header.scss';\nimport { Icon } from 'antd';\nimport logo from '../../asset/img/logo.jpg';\n\nfunction Header(props) {\n    return (\n        <div className='header'>\n            <a>\n                <img src={logo} className='logo' />\n            </a>\n            <ul className={'footerItem'}>\n                <li>\n                    <a>Reservation</a>\n                </li>\n                <li>\n                    <a>Orders</a>\n                </li>\n                <li>\n                    <button className={'login-btn'}>\n                        log in\n                    </button>\n                </li>\n                <li>\n                    <button className={'signup-btn'}>\n                        sign up\n                    </button>\n                </li>\n                <li>\n                    <Icon className={'cart'} type=\"shopping-cart\" />\n                </li>\n            </ul>\n        </div>\n\n    )\n}\nexport default Header;\n","import React from 'react';\nimport './MainPage.scss'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FoodList from \"../components/FoodList\";\nimport TopSlider from \"../components/TopSlider/TopSlider\";\nimport Header from \"../components/Header/Header\";\n\nvar data = require('../menu.json');\n\nfunction ElevationScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window ? window() : undefined,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\nfunction MainPage(props) {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <ElevationScroll {...props}>\n                <AppBar>\n                    <Toolbar>\n                        <Header />\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n            <Toolbar />\n            <Grid spacing={3}>\n                <Box my={2}>\n                    <div className='main'>\n                        <TopSlider />\n                        <div className='page-body'>\n                            <div className='order-option-bar'>\n                                <a className=\"options\">\n                                    <div className=\"mode\">ASAP Pickup</div>\n                                    <div className=\"sub\">395 Santa Monica Pier</div>\n                                </a>\n                                <button className='change'>\n                                    change\n                                </button>\n\n                                <div className=\"type-select\">\n                                    <div className=\"item\">Delivery</div>\n                                    <span className=\"seperator\">or</span>\n                                    <div className=\"item\">Pickup</div>\n                                </div>\n                                <div className=\"divider\"></div>\n                                <a className=\"catering\">Catering</a>\n                            </div>\n\n                            <FoodList title={'Special Offers'} data={data} />\n                        </div>\n                    </div>\n                </Box>\n            </Grid>\n        </React.Fragment>\n    );\n}\n\nexport default MainPage;\n","import React from 'react';\nimport MainPage from './pages/MainPage';\n\n\nfunction App(props) {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/topSlider1.d4396cb2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e62f3ae9.jpg\";"],"sourceRoot":""}